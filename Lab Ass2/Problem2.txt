module Problem2_19101038(clock, reset, mny , buy, present_state, next_state, chg);
	input clock, reset;
	input [1:0] mny ;
	output reg buy; // output z = 1 or 0
	output reg [1:0] chg, present_state, next_state;
	parameter 	state0tk= 2'b00, // 0tk/final state
				state10tk= 2'b10, // 10tk state
				product = 15; // what I am buying, 10/15/20 tk profuct
	
	always@(posedge clock)
	begin
		begin 
			if(reset==1)
			begin 
				present_state=0;
				next_state=0;
			end
			else
			begin
				present_state=next_state;
				case(present_state)
				
				state0tk: if(mny  == 2'b00) // 0 tk
							begin
								next_state = state0tk;
								buy =0;
								chg = 2'b00;
							end
						else if(mny  == 2'b01) // 10 tk
							begin
								next_state=state10tk;
								buy=0;
								chg=2'b00;
							end
						else if(mny  == 2'b10) // 20 tk
							begin
								next_state = state0tk;
								buy = 1;
								chg = 2'b01;
							end
							
				state10tk: if(mny  == 2'b00)
							begin
								next_state = state0tk;
								buy =0;
								chg =2'b10;
							end
						else if(mny  == 2'b01)
							begin
								next_state=state0tk;
								buy= 1;
								chg = 2'b01;
							end
						else if(mny  == 2'b10)
							begin
								next_state=state0tk;
								buy=1;
								chg=2'b11;
							end

				endcase
			end
		end
	end
endmodule 